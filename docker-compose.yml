version: "3.8"

services:
  mqtt:
    image: toke/mosquitto
    container_name: mqtt
    expose:
      - "1883"
    ports:
      - "1883:1883"
    restart: unless-stopped
    networks:
      - app-network
    deploy:
      resources:
        limits:
          memory: 512m
          cpus: "0.5"

  scylla1:
    image: scylladb/scylla:latest
    container_name: scylla1
    expose:
      - "9042"
    ports:
      - "9042:9042"
    environment:
      - SCYLLA_CLUSTER_NAME=scylla-cluster
      - SCYLLA_DC=dc1
      - SCYLLA_RACK=rack1
      - SCYLLA_LISTEN_ADDRESS=0.0.0.0  # Escutando em todas as interfaces
      - SCYLLA_LISTEN_INTERFACE=eth0
      - SCYLLA_BROADCAST_ADDRESS=scylla1
      - SCYLLA_BROADCAST_INTERFACE=eth0
    networks:
      - app-network
    volumes:
      - scylla-data:/var/lib/scylla  # Volume persistente para os dados

  scylla2:
    image: scylladb/scylla:latest
    container_name: scylla2
    expose:
      - "9042"
    ports:
      - "9043:9042"
    environment:
      - SCYLLA_CLUSTER_NAME=scylla-cluster
      - SCYLLA_DC=dc1
      - SCYLLA_RACK=rack2
      - SCYLLA_LISTEN_ADDRESS=0.0.0.0  # Escutando em todas as interfaces
      - SCYLLA_LISTEN_INTERFACE=eth0
      - SCYLLA_BROADCAST_ADDRESS=scylla2
      - SCYLLA_BROADCAST_INTERFACE=eth0
    networks:
      - app-network
    volumes:
      - scylla-data:/var/lib/scylla  # Volume persistente para os dados

  fastapi1:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: controller1
    expose:
      - "8000"
    ports:
      - "8001:8000"
    restart: unless-stopped
    depends_on:
      - mqtt
      - scylla1
      - scylla2
    networks:
      - app-network
    environment:
      - INSTANCE=1
      - DB_CLUSTERS=scylla1,scylla2
      - INSTANCE_PAIR=controller2
    entrypoint: ["./wait-for-it.sh", "scylla1:9042", "scylla2:9042", "--", "uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8000"]
    deploy:
      resources:
        limits:
          memory: 512m
          cpus: "1"

  fastapi2:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: controller2
    expose:
      - "8000"
    ports:
      - "8002:8000"
    restart: unless-stopped
    depends_on:
      - mqtt
      - scylla1
      - scylla2
    networks:
      - app-network
    environment:
      - INSTANCE=2
      - DB_CLUSTERS=scylla1,scylla2
      - INSTANCE_PAIR=controller1
    entrypoint: ["./wait-for-it.sh", "scylla1:9042", "scylla2:9042", "--", "uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8000"]
    deploy:
      resources:
        limits:
          memory: 512m
          cpus: "1"

  nginx:
    image: nginx:alpine
    container_name: nginx
    ports:
      - "81:81"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
    depends_on:
      - fastapi1
      - fastapi2
    networks:
      - app-network
    restart: unless-stopped
    deploy:
      resources:
        limits:
          memory: 256m
          cpus: "0.5"

networks:
  app-network:
    driver: bridge

volumes:
  scylla-data:
    driver: local
